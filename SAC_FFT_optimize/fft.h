/*****************************************************************************
 * FileName:       fft.h
 * Author:         gotozw@yeah.net
 * Description:
 * Version:
 * Function List:
 *                 1.
 * History:
 *     <author>    <time>    <version >        <desc>
 *        ZW     2021-12-18     1.00      Created initial version
 *****************************************************************************/


/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef __FFT_H
#define __FFT_H

//#ifdef __cplusplus
//extern "C" {
//#endif

/* Includes ------------------------------------------------------------------*/
//#include "mytypes.h"
#include "stdint.h"
#include <math.h>
typedef uint16_t            u16;                  /* 无符号16位整型变量 */
typedef struct
{
    float real;
    float image;
}COMPLEX_T;
#define C_PI	3.141592653589793238462643
#define C_DPR	180.0/C_PI	/*degree per radius*/
#define C_RPD	C_PI/180.0	/*radius per degree*/
#define PI2 	6.28318530717959

/* Public define ------------------------------------------------------------*/
#define SAMFREQ_FFT 32

/* Public typedef -----------------------------------------------------------*/
typedef struct
{
    COMPLEX_T faSam[SAMFREQ_FFT];
    COMPLEX_T faSam_out[SAMFREQ_FFT];

    COMPLEX_T faSam1[SAMFREQ_FFT];
    float faValue_U[3][SAMFREQ_FFT/2];/* 幅值 */
    float faValue_I[3][SAMFREQ_FFT/2];
    float faAngle_U[3][SAMFREQ_FFT/2];/* 角度 */
    float faAngle_I[3][SAMFREQ_FFT/2];
    float faRms_U[3]; /* 均方根值 */
    float faRms_I[3];
    float faThd_U[3];/* 谐波含有率 */
    float faThd_I[3];
} FFT_COMPUTER_T;

    

typedef struct
{
    u16	addr;			/*ID号*/
    u16 password;		/*口令*/
    u16 pt;
    u16 ct;
    u16 bps;            /*0=1200;1=2400;2=4800;3=9600;4=115200*/
    u16 flag;           /*是否打开保护功能 1=打开*/
    float fCHNCoef[6];	/*增益系数*/
    float fCHNOffSet[6];/*偏置系数*/
	float fUCoef[3];	/*增益系数*/
	float fICoef[3];	/*增益系数*/
	float fUFFTCoef[3];	/*增益系数*/
	float fIFFTCoef[3];	/*增益系数*/
    float start_wh;
    float start_varh;
    u16 res[3];/*保留4个字节用于结束*/
    u16 sum;
} SPara; // 共76字节

    /* Public macro -------------------------------------------------------------*/
    /* Public variables ---------------------------------------------------------*/
    /* Public function prototypes -----------------------------------------------*/

const SPara DefaultSysPara =
{
    1, // addr
    0,  //password
    1,	//pt
    5,	//ct
    3,	//BPS
    0,/*保护退出，声音关闭*/
    1, 1, 1, 1, 1, 1, /*电压电流系数*/
    0, 0, 0, 0, 0, 0, /*偏置系数*/
    1, 1, 1,          /*增益系数*/
    1, 1, 1,          /*增益系数*/
    1, 1, 1,          /*增益系数*/
    1, 1, 1,         /*增益系数*/
    0.0,             //start_wh起始有功无功用不到
    0.0,             //start_varh;起始有功无功用不到
    0x55AA, 0x1234, 0xABCD,  /*保留4个字节用于结束*/
    0				//sum
};

const float cos1 = 1;
const float sin1 = 0;
const float cos2[2] = { 1, 0 };
const float sin2[2] = { 0, -1 };
const float cos4[4] = { 1.000000, 0.707107, 0.000000, -0.707107 };
const float sin4[4] = { 0.000000, -0.707107, -1.000000, -0.707107 };
const float cos8[8] = { 1.000000, 0.923880, 0.707107, 0.382683, 0.000000, -0.382683, -0.707107, -0.923880 };
const float sin8[8] = { 0.000000, -0.382683, -0.707107, -0.923880, -1.000000, -0.923880, -0.707107, -0.382683 };
const float cos16[16] = { 1.000000, 0.980785, 0.923880, 0.831470, 0.707107, 0.555570, 0.382683, 0.195090, 0.000000, -0.195090, -0.382683, -0.555570, -0.707107, -0.831470, -0.923880, -0.980785 };
const float sin16[16] = { 0.000000, -0.195090, -0.382683, -0.555570, -0.707107, -0.831470, -0.923880, -0.980785, -1.000000, -0.980785, -0.923880, -0.831470, -0.707107, -0.555570, -0.382683, -0.195090 };
const float cos32[32] = { 1.000000 , 0.995185 , 0.980785 , 0.956940 , 0.923880 , 0.881921 , 0.831470 , 0.773010, 0.707107 , 0.634393 , 0.555570 , 0.471397 , 0.382683 , 0.290285 , 0.195090 , 0.098017,
                         0.000000 , -0.098017 , -0.195090 , -0.290285 , -0.382683 , -0.471397 , -0.555570 , -0.634393 , -0.707107 , -0.773010 , -0.831470 , -0.881921 , -0.923880 , -0.956940 , -0.980785 , -0.995185
};
const float sin32[32] = { 0.000000 , -0.098017 , -0.195090 , -0.290285 , -0.382683 , -0.471397 , -0.555570 , -0.634393 , -0.707107 , -0.773010 , -0.831470 , -0.881921 , -0.923880 , -0.956940 , -0.980785 , -0.995185 ,
                         -1.000000 , -0.995185 , -0.980785 , -0.956940 , -0.923880 , -0.881921 , -0.831470 , -0.773010 , -0.707107 , -0.634393 , -0.555570 , -0.471397 , -0.382683, -0.290285 , -0.195090 , -0.098017
};
const float cos64[64] = { 1.000000 , 0.998795 , 0.995185 , 0.989177 , 0.980785 , 0.970031 , 0.956940 , 0.941544
                          , 0.923880 , 0.903989 , 0.881921 , 0.857729 , 0.831470 , 0.803208 , 0.773010 , 0.740951
                          , 0.707107 , 0.671559 , 0.634393 , 0.595699 , 0.555570 , 0.514103 , 0.471397 , 0.427555
                          , 0.382683 , 0.336890 , 0.290285 , 0.242980 , 0.195090 , 0.146730 , 0.098017 , 0.049068
                          , 0.000000 , -0.049068 , -0.098017 , -0.146730 , -0.195090 , -0.242980 , -0.290285 , -0.336890 , -0.382683 , -0.427555 , -0.471397 , -0.514103 , -0.555570 , -0.595699 ,
                          -0.634393 , -0.671559 , -0.707107 , -0.740951 , -0.773010 , -0.803208 , -0.831470 , -0.857729 , -0.881921 , -0.903989 , -0.923880 , -0.941544 , -0.956940 , -0.970031 , -0.980785 ,
                          -0.989177 , -0.995185 , -0.998795
};
const float sin64[64] = { -0.000000 , -0.049068 , -0.098017 , -0.146730 , -0.195090 , -0.242980 , -0.290285 , -
                          0.336890 , -0.382683 , -0.427555 , -0.471397 , -0.514103 , -0.555570 , -0.595699 , -0.634393 , -0.671559 , -0.707107 , -0.740951 , -0.773010 , -0.803208 , -0.831470 , -0.857729 , -0.881921 , -0.903989 , -0.923880 , -0.941544 , -0.956940 , -0.970031 , -0.980785
                          , -0.989177 , -0.995185 , -0.998795 , -1.000000 , -0.998795 , -0.995185 , -0.989177 , -0.980785 , -0.970031 , -0.956940 , -0.941544 , -0.923880 , -0.903989 , -0.881921 , -0.857729 , -0.831470 , -0.803208 , -0.773010 , -0.740951 , -0.707107 , -0.671559 , -0.634393 , -0.595699 , -0.555570 , -0.514103 , -0.471397 , -0.427555 , -0.382683 , -0.336890 ,
                          -0.290285 , -0.242980 , -0.195090 , -0.146731 , -0.098017 , -0.049068
};
const float cos128[128] = { 1.000000 , 0.999699 , 0.998795 , 0.997290 , 0.995185 , 0.992480 , 0.989177 , 0.985278
                            , 0.980785 , 0.975702 , 0.970031 , 0.963776 , 0.956940 , 0.949528 , 0.941544 , 0.932993
                            , 0.923880 , 0.914210 , 0.903989 , 0.893224 , 0.881921 , 0.870087 , 0.857729 , 0.844854
                            , 0.831470 , 0.817585 , 0.803208 , 0.788346 , 0.773010 , 0.757209 , 0.740951 , 0.724247
                            , 0.707107 , 0.689541 , 0.671559 , 0.653173 , 0.634393 , 0.615232 , 0.595699 , 0.575808
                            , 0.555570 , 0.534998 , 0.514103 , 0.492898 , 0.471397 , 0.449611 , 0.427555 , 0.405241
                            , 0.382683 , 0.359895 , 0.336890 , 0.313682 , 0.290285 , 0.266713 , 0.242980 , 0.219101
                            , 0.195090 , 0.170962 , 0.146730 , 0.122411 , 0.098017 , 0.073565 , 0.049068 , 0.024541
                            , 0.000000 , -0.024541 , -0.049068 , -0.073565 , -0.098017 , -0.122411 , -0.146730 , -0.170962 , -0.195090 , -0.219101 , -0.242980 , -0.266713 , -0.290285 , -0.313682 ,
                            -0.336890 , -0.359895 , -0.382683 , -0.405241 , -0.427555 , -0.449611 , -0.471397 , -0.492898 , -0.514103 , -0.534998 , -0.555570 , -0.575808 , -0.595699 , -0.615232 , -0.634393 ,
                            -0.653173 , -0.671559 , -0.689541 , -0.707107 , -0.724247 , -0.740951 , -0.757209 , -0.773010 , -0.788346 , -0.803208 , -0.817585 , -0.831470 , -0.844854 , -0.857729 , -0.870087 , -0.881921 , -0.893224 , -0.903989 , -0.914210 , -0.923880 , -0.932993 , -0.941544
                            , -0.949528 , -0.956940 , -0.963776 , -0.970031 , -0.975702 , -0.980785 , -0.985278 , -0.989177 , -0.992480 , -0.995185 , -0.997290 , -0.998795 , -0.999699
};
const float sin128[128] = { -0.000000 , -0.024541 , -0.049068 , -0.073565 , -0.098017 , -0.122411 , -0.146730 , -0.170962 , -0.195090 , -0.219101 , -0.242980 , -0.266713 , -0.290285 , -0.313682 ,
                            -0.336890 , -0.359895 , -0.382683 , -0.405241 , -0.427555 , -0.449611 , -0.471397 , -0.492898 , -0.514103 , -0.534998 , -0.555570 , -0.575808 , -0.595699 , -0.615232 , -0.634393
                            , -0.653173 , -0.671559 , -0.689541 , -0.707107 , -0.724247 , -0.740951 , -0.757209 , -0.773010 , -0.788346 , -0.803208 , -0.817585 , -0.831470 , -0.844854 , -0.857729 , -0.870087 , -0.881921 , -0.893224 , -0.903989 , -0.914210 , -0.923880 , -0.932993 , -0.941544 , -0.949528 , -0.956940 , -0.963776 , -0.970031 , -0.975702 , -0.980785 , -0.985278 ,
                            -0.989177 , -0.992480 , -0.995185 , -0.997290 , -0.998795 , -0.999699 , -1.000000 , -0.999699 , -0.998795 , -0.997290 , -0.995185 , -0.992480 , -0.989177 , -0.985278 , -0.980785 , -0.975702 , -0.970031 , -0.963776 , -0.956940 , -0.949528 , -0.941544 , -0.932993
                            , -0.923880 , -0.914210 , -0.903989 , -0.893224 , -0.881921 , -0.870087 , -0.857729 , -0.844854 , -0.831470 , -0.817585 , -0.803208 , -0.788346 , -0.773010 , -0.757209 , -0.740951 , -0.724247 , -0.707107 , -0.689541 , -0.671559 , -0.653173 , -0.634393 , -0.615232 , -0.595699 , -0.575808 , -0.555570 , -0.534998 , -0.514103 , -0.492898 , -0.471397
                            , -0.449611 , -0.427555 , -0.405241 , -0.382683 , -0.359895 , -0.336890 , -0.313682 , -0.290285 , -0.266713 , -0.242980 , -0.219101 , -0.195090 , -0.170962 , -0.146731 , -0.122411 , -0.098017 , -0.073565 , -0.049068 , -0.024541
};

typedef COMPLEX_T  cplx_t;
//#define FS_FFT  (SAMFREQ_FFT*50)


class arduinoFFT {
public:
    

//    void fft(cplx_t* x, u16 N);
    arduinoFFT( double samplingFrequency);
    ~arduinoFFT(void);
    void FFT_Computer(void);

    FFT_COMPUTER_T g_ComputerFFT;
private:
    void fft2(COMPLEX_T* x, COMPLEX_T* y, u16 len);
    void fft_split(COMPLEX_T* a, COMPLEX_T* x, COMPLEX_T* y, u16 N);
    //struct STUDENT* p = NULL;
    
    float  HWPercent[6][20];
    SPara SysPara;
    int FS_FFT;
    //FFT_COMPUTER_T g_ComputerFFT;
};



#endif /* __FFT_H */


